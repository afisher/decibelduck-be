#!/usr/bin/env bash

# Build out some decibelduck-internal infrastructure
#
# This creates exactly and only the infrastructure needed to run terraform
# in the decibelduck-internal account, and build the remaining dd-internal
# resources. This list consists of:
#
#  - the decibelduck-internal project itself
#  - the tfstate bucket, with versioning and private access control
#  - a service account to own the bucket
#  - the iamcredentials google API (enabled)
#  - an iam binding to create the bucket-svcaccount relationship
#
# This is meant to be run in an empty google account exactly one time.
# It is not useful for individual code contributors to the project.

set -euo pipefail
IFS=$'\n\t'

eat() {
    "$@" >/dev/null 2>&1
}


project=decibelduck-internal
bucket=gs://tfstate-decibelduck-com
service_acct=tfstate
service_acct_email=tfstate@decibelduck-internal.iam.gserviceaccount.com
iam_role_bucket=tfstate-bucket-owner
iam_role_bucket_id=tfstate_bucket_owner


# create internal project
if ! eat gcloud projects describe decibelduck-internal; then
    gcloud projects create --set-as-default decibelduck-internal
fi

# create service account to own tfstate bucket; enable impersonation
if ! eat gcloud service-accounts describe $service_acct; then
    gcloud --project $project \
        iam service-accounts create $service_acct \
            --description "ownership of tfstate-decibelduck-com bucket"
    gcloud services enable --project $project iamcredentials.googleapis.com
fi

# create tfstate bucket; grant admin rights to the service account above
if ! eat gsutil ls $bucket; then
    gsutil mb --pap enforced -l us-west1 -b on $bucket
    gsutil versioning set on $bucket
    gsutil iam ch serviceAccount:$service_acct_email:objectAdmin $bucket
fi
